<div class="main-window">
    <div class="menu box">
        <a href="#" id="addObjective" class="button button-inline button-small button-inverse"><span>Добавить задачу</span></a>
        <a href="#" id="addSubObjective" class="button button-inline button-small button-inverse"><span>Добавить подзадачу</span></a>
        <a href="#" id="deleteObjective" class="button button-inline button-small button-inverse"><span>Удалить задачу</span></a>
    </div>
    <div class="objective-details box">
        @{await Html.RenderPartialAsync("_CreateObjective", new ObjectiveModel());}
    </div>

</div>

@section scripts
{
    <partial name="_ValidationScriptsPartial"/>
    <script src="~/lib/jstree/dist/jstree.js"></script>
    <script type="text/javascript">
        var appSettings = appSettings || {};
        appSettings.Urls = appSettings.Urls || {};
        appSettings.Urls.getRootItems = "@Url.Action("GetRoot", "Menu")";
        appSettings.Urls.getChildrenItems = "@Url.Action("GetChildren", "Menu")?Id=";
        appSettings.Urls.getObjective = "@Url.Action("GetObjective", "Home")?Id=";
        appSettings.Urls.addObjective = "@Url.Action("CreateObjective", "Home")";
        appSettings.Urls.addSubObjective = "@Url.Action("CreateSubObjective", "Home")?parentId=";
        appSettings.Urls.deleteObjective = "@Url.Action("Delete", "Objective")";
        appSettings.jsTreeSelector = ".tree-view";
        appSettings.FormSelector = "#CreateObjectiveForm";
        appSettings.objectiveDetailsWindow = ".objective-details";
        
        let selectedNode = {};

        DrawTreeMenu(appSettings);
        $(document).ready(function () {
            $("#addSubObjective").hide();
            $("#deleteObjective").hide();
            sendFormData(appSettings);
        });

        $(appSettings.jsTreeSelector).on("select_node.jstree",
            function(e, data) {
                $(appSettings.objectiveDetailsWindow).load(appSettings.Urls.getObjective + data.node.id);
                console.log(data.node);
                selectedNode = data.node;
                let jsTreeInstance = $(appSettings.jsTreeSelector).jstree(true);
                if (jsTreeInstance.is_parent(selectedNode)) {
                    $("#addSubObjective").show();
                    $("#deleteObjective").hide();
                } else {
                    $("#addSubObjective").show();
                    $("#deleteObjective").show();
                }
            });

        $("#addObjective").click(function(e) {
            e.preventDefault();
            $(appSettings.objectiveDetailsWindow).load(appSettings.Urls.addObjective,
                function() {
                    sendFormData(appSettings);
                });
        });
        $("#addSubObjective").click(function(e) {
            e.preventDefault();
            $(appSettings.objectiveDetailsWindow).load(appSettings.Urls.addSubObjective + selectedNode.id,
                function() {
                    sendFormData(appSettings);
                });
        });
        $("#deleteObjective").click(function(e) {
            e.preventDefault();
            deleteObjectiveRequest(appSettings);
        });
    </script>
}

