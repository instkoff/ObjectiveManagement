@inject IViewLocalizer Localizer
<div class="main-window">
    <div class="menu box">
        <a href="#" id="addObjective" class="button button-inline button-small button-inverse"><span>@Localizer["AddObjectiveButton"]</span></a>
        <a href="#" id="addSubObjective" class="button button-inline button-small button-inverse"><span>@Localizer["AddSubObjectiveButton"]</span></a>
        <a href="#" id="deleteObjective" class="button button-inline button-small button-inverse"><span>@Localizer["DeleteObjectiveButton"]</span></a>
    </div>
    <div class="objective-details box">
        @{await Html.RenderPartialAsync("_CreateObjective", new ObjectiveModel());}
    </div>

</div>

@section scripts
{
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/jstree/dist/jstree.js"></script>
    <script type="text/javascript">
        let appSettings = {
            Urls : {
                getRootItems : "@Url.Action("GetRoot", "Menu")",
                getChildrenItems : "@Url.Action("GetChildren", "Menu")?Id=",
                getObjective : "@Url.Action("GetObjective", "Home")?Id=",
                addObjective : "@Url.Action("CreateObjective", "Home")",
                addSubObjective : "@Url.Action("CreateSubObjective", "Home")?parentId=",
                deleteObjective : "@Url.Action("Delete", "Objective")"
            },
            jsTreeSelector : ".tree-view",
            FormSelector : "#CreateObjectiveForm",
            objectiveDetailsWindow : ".objective-details"
        };

        let selectedNode = {};

        DrawTreeMenu(appSettings);
        $(document).ready(function () {
            $("#addSubObjective").hide();
            $("#deleteObjective").hide();
            sendFormData(appSettings);
        });

        $(appSettings.jsTreeSelector).on("select_node.jstree",
            function(e, data) {
                $(appSettings.objectiveDetailsWindow).load(appSettings.Urls.getObjective + data.node.id,
                    function () {
                        selectedNode = data.node;
                        updateFormDataEvent(appSettings, selectedNode);
                        console.log(data.node);
                        let jsTreeInstance = $(appSettings.jsTreeSelector).jstree(true);
                        if (jsTreeInstance.is_parent(selectedNode)) {
                            $("#addSubObjective").show();
                            $("#deleteObjective").hide();
                        } else {
                            $("#addSubObjective").show();
                            $("#deleteObjective").show();
                        }
                    });
            });

        $("#addObjective").click(function(e) {
            e.preventDefault();
            $(appSettings.objectiveDetailsWindow).load(appSettings.Urls.addObjective,
                function() {
                    sendFormData(appSettings);
                });
        });
        $("#addSubObjective").click(function(e) {
            e.preventDefault();
            $.ajax({
                url: appSettings.Urls.addSubObjective + selectedNode.id,
                headers: { "objective-name" : selectedNode.text },
                type: "GET",
                success: function(result) {
                    $(appSettings.objectiveDetailsWindow).html(result);
                    sendFormData(appSettings);
                }
            });
        });
        $("#deleteObjective").click(function(e) {
            e.preventDefault();
            deleteObjectiveRequest(appSettings);
        });
    </script>
}

